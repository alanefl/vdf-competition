"""
Script that can be used to generate ground-truth pairs for random class group elements
and operations.

Prints out lists of form "[inp1, inp2, ..., inpn] out [+|-]", where each inp and out are of form (a, b, c).
The final "+" or "-" strings indicate whether the final result is a true ground-truth output or not. Most 
generated elements have the "+" label.
"""

import argparse
import random
from tqdm import tqdm
from inkfish.classgroup import ClassGroup

DISCRIMINANT = int("-30616069034807523947093657516320815215492876376165067902716988657802400037331914448218251590830\
1102189519215849430413184776658192481976276720778009261808832630304841711366872161223643645001916\
6969493423497224870506311710491233557329479816457723381368788734079933165653042145718668727765268\
0575673207678516369650123480826989387975548598309959486361425021860161020248607833276306314923730\
9854570972702350567411779734372573754840570138310317754359137013512655926325773048926718050691092\
9453371727344087286361426404588335160385998280988603297435639020911295652025967761702701701471162\
3966286152805654229445219531956098223")

# TODO: make larger as necessary.
MAX_EXP = 1E50

#print(vest_g.normalized())

## Generate a few random elements of this group.
# powers_of_two = [2 ** i for i in range(1, 20)]
# for i in range(10000000):
#     g = g * vest_g
#     if i in powers_of_two:
#         print(g)

elem1 = ClassGroup(16, 9, 478376078668867561673338398692512737742076193377579185979952947778162500583311163253410181106720472171123774764735020601213528425753087932376215639471576300984851315174010737751911943195315494838983347421441386016611204764255243332731221321519278338873239699989557133287835268541988713323133994893869976818275783179387921709187117946848593116974397265966565015941384497394942286170683296647767144847422761580905834957146491938390841109871491186151583613524884884020388947996954204832727089332397513638493972875716927368810312231404469265224318597017389945629057462766047140854869124473221137588347335081555186814036)
elem2 = ClassGroup(64, 9, 119594019667216890418334599673128184435519048344394796494988236944540625145827790813352545276680118042780943691183755150303382106438271983094053909867894075246212828793502684437977985798828873709745836855360346504152801191063810833182805330379819584718309924997389283321958817135497178330783498723467494204568945794846980427296779486712148279243599316491641253985346124348735571542670824161941786211855690395226458739286622984597710277467872796537895903381221221005097236999238551208181772333099378409623493218929231842202578057851117316306079649254347486407264365691511785213717281118305284397086833770388796703509)
elem3 = ClassGroup(1024, 393, 7474626229201055651145912479570511527219940521524674780936764809033789071614236925834534079792507377673808980698984696893961381652391998943378369366743379702888301799593917777373624112426804606859114803460021656509550074441488177073925333148738724044894370312336830207622426070968573645673968670216718387785559112177936276706048717919509267452724957280727578374084132771795973221416926510121361638240980649701653671205413936537356892341742049783618493961326326312818577312452409450511360770818711150601468326183076990137661128615694832269129978078396717900454022855719486575857330069894080274817927110649299794007)
elem4 = ClassGroup(262144, 67977, 29197758707816623637288720623322310653202892662205760863034237535288238560993112991541148749189481944038316330855408972242036647079656245872571755338841326964407428904663741317865719189167205495543417201015709595740429978287063191695020832612260640800368634032565742998525101839720990803413940118034056202287340281945063580883002804373083075987206864377842103023766143639828020396159869180161568899378830662897084653146148189599050360709929881967259742036430962159447567626767224416060003011010590432036985649152644492725238783655057938551288976868737179298648526780154244436942695585523751073507527775973831727)
elem5 = ClassGroup(17179869184, 810092937, 445522441220346430012340097401768656207319529147426770981357384266483132339372451653154735552818022827733098310171645694611154893183231290780208669110738021307486402964229451261378771807360923699087786880732873470160369541733752314682324716373605969243906158944179428078080777583633282522795717133088015781972355376359002393844647283524827209277448492093537948971041010129211737001951128847680189504681864363053659868563052209458165904387357818103938934882064241934929925945544806153259323288125464356033106218759834178546734369736601845570205335521502369669319561464755927077372674339656846214409307889147)
elem6 = ClassGroup(73786976294838206464, -17954711623037286007, 103731276751576557292682141391972232658257598324545372971649603980240210038463690237411003455710136990000749544746159970436979758828699423647534257990945601208947227095307188867912341795712924492333034724167751490641471357488481401159038002689742941698968913160306268389821233596567363134304926994509998658199877332979580944833496418670943754091264794602416909525878962625100216130248999420478984132567854682694575718735124033283946547747440128145725218318883385959763528300808930339584900831832891413018364975871479645964394875275111255601561939232401170225189896641475131520390828481144958363262)
elem7 = ClassGroup(1361129467683753853853498429727072845824, 428431366168469643425387683244778523017, 5623283780437720132457652050422696380101421957043652577058843532839723106980089756127920878182420741614322810946811728512454600411094128903688192589975947881553859722961792679197836968545182335907027760969482666768535332332676075401921181290504475142216740904849791594901353610444373096790818559624690085288385305472440124165909377882318826427907086705711024077695490943550017937918388738292114089720774327472658882261362076823921432618658661225636274023339220373770095984592361006690390807715540956197894209386805677395432499520491800046262812410011198420636978188008623363022)
elem8 = ClassGroup(463168356949264781694283940034751631413079938662562256157830336031652518559744, 388315924533613977567606167658528770329993220561120864134332611044027392395657, 16525345792437841372505925783248407637081219001834467798839935198036480487821849178541951092721077791244026182052032573379850911382731911225739013482864063250545694233258381817734451277767445682645272552260517071662843076509154605530327247596229590156661102368570000145360474058059069546558223581648907089201766010500544088477400496012751222141394268332932429810318189325412013029435657358488971640417410246299900845213026591746204309687649580464002659292014975449380370079151054871099774200926138855527785831004520257806127224963682246797)
elem9 = ClassGroup(53631231719770388398296099992823384509917463282369573510894245774887056120294187907207497192667613710760127432745944203415015531247786279785734596024336384, -46174609472669931676600386977098644862828193253664106530561029593809736200504357611998171664248367529499183251428882937424065725469680930197755322942551671, 142715671694713972546060435695018556478398552111312573630569217109035524132299479259392880967724733070855619233490538545646710003851142679340713588685617081158007864036453462827982607313718172922509037011973106146785948201249517826171967674589395571704519036054424566694953751013406937380614564945497343965340473771003066086083261095520582732291654028828199140587158492403833837488229776543150597844233900364915773777858553598677650873942919016512687771750660374)
elem10 = ClassGroup(23564015098057428060844823566219012294822661409721849430667264692522803975086601716945658323234533384459813657582121403544590108690336513478696943172103719654984092908875565869083165647720177194075873229559060681391692009787265881226720575735505988712151427578452825169535367821543502489354568606848699866842, -4260595230292404873319819522697173798867136064082013049962845159669512008099258158745681124006171636701459451552356789927181651714138970182104966853553038589482565148157198946096768499460295946526446925906637130585922275392884601508861178912166403814557073851889566065798029738183709127013517077491961303737, 325010631454837894624925621165317001534559664765044986003192708911887791588221192424720651621852923386317599191962203814212990729355726393583818764390024828673395826564824091415491154043620357586492572431768503650741841471202059020232678514746547514000750906075541725984030979656487988881614259298949853464444)
elem11 = ClassGroup(44652174490809490666201116118984023333227155519717505141907683424662834077724606693140358994927630797421934333006800066105347242293422534653956850596006344531390789221041533708486197380208641737881914284351484486049607207987610265983481811479451700831511460367593933052536060479817509337420309806115996250986, -33230940265595426214335923876913523079442467520701457364778284007426343835034619774862892744346740556045761749640337572534679271287474359209724501982002510442226574182602072646881359656398046153841929813613988782917100950585772024909801172148170241350012092360400230485300466206470573858186288544376858433785, 177596974769235045766500322812298424375234708239516096231056013113666221380525038402618301157835386667835523038048667447886088543032759269729792471613694410385016816475578211242286665415094538615389929628300529442432020249476556998692767631830343581819606113757255410627352306688983230264149708252062163936492)
elem12 = ClassGroup(77636266318520908524884370979437978006649745356590912409442044541531577345406364815859341237484012828089423472882277090271491371330727683691723688566300629403443604873791616258019912556957524984206282236459515572332596545329091358793089909357884827167148710463510252118207231432246460593090516650382841821307, 41680895730085329535729223143927287432904407534767806620340380746182839776341180177268229906763828238818870391753505787472979438081751796731065023395062074400863615507530646454423210233543031645389063225215374474636869906872646439280368944731418511848085979207517338726812923149598284244028487027292050200811, 104182515587922953858522490900959479095958618574881286710619740367438121987279129483539088110520515349817242107767785606713607208274319159655567237303272449673992762818684392849001315470233566995397819254737175580320682000034476152317972176247069700129476789943477122164548170523090861545678880206663523498798)
elem13 = ClassGroup(69947612691132346275615646314260761293351367986273310683032580579714307272581320407996319167346865956989964898211950240437805659259258145369651339141826863862643118975960896580379050340095553562103364150415834856890699000008157534968554828801508860953821350793143662545862676788234144816011014041956897915233, 26196102841529383048564988576333403004620893749297434294422818625499730525190981925694387819691495125045525114764217591297608080781893300801957986916629113391808038750203510280180453643356698525450362162947849533100051809883250011569439259035818914776880834028076372893127518880120998352597141687345355528425, 111877673999801417289896690347475259020698695941105304551079921278927986965851809208997389770976479105338562283765142044043722710796577494012283760126165806123620543307144713339528611858209022703659248543309986937789351933668513741610578008611097547806948045628970662426668001218635642256120640776609652335664)
elem14 = ClassGroup(46534795363241315230249488837075631097036322234481127755824035231244062735941312836079714634166515292226474426631260593713606812656201052294149385162797462404514346578360143869578515181943823309324420661696823355306436556581504595410357253926993655248634435868223249530367603711705050817477540534092917448692, -22970681445527456659372227755814297698506612381175404261629438566214735339017496842785197107403192653080733953339354879462387204010836552295446093648681871435229759124686228969811833185815330024156214098977981942538717203703726936861572955150115457834836860058816584737888654712080360007155768120460471617153, 167314162433603487652610141967542035647024657246976350227009774953423222113825452512842720074157342031032374847750459866414735841415217229750402947291872221490732463760309500808149945116500697615417662364271567196790557635347454531757629262352045192042597952908780660915480442718927461317919273763638379703799)
elem15 = ClassGroup(11472417649467730134064148648361032632765778436225145580753489881875576986152444306239990445369805072313493817358266903724777648653019358997207893553044520130139106661630859442373482386402445859583876739092336174566047121287320254048411276680217810579075484465562930400744289287930199341469619761161746938956, -1555695683246744867913116879593272987745809081478442184846836608420292476959782061604392251342893107800963682919754539077863592208758629891599017909827731481925863288462180766511086477704989470070369695993693994170379791100137700279376009269274523932460673841982749818720182224500356382877979578680816025359, 667219634069174602533264153188102983075166951762694648780697854786367657932264511489343347312210394481628560329527792500406265526105082075278830325312598056046808542138099526389946773753020026159090417786036649977314059815516027172070264155659003823267481115256660211268513650160074741539552255958972256203971)
elem16 = ClassGroup(47192544196438848654450157472181929947072341369359143717975632576236345909481411259806362356145644167067085476821104261652406282526189428274773400891528700698803355964880584713394336110341397731254016040308262367518272915999659724438241166652831991671731099178635965971543642846408951232156513557720832114842, -21694145635046894540110562954929125923789723660232797269981915363757124310090611270010805301729055391867039546692609116381849989545502026821885609709213367385672204910742252621362880631460308010470951722631100606877525760583531048991327310696257536175495513844581550815764262969036928057397404964203354363203, 164680170983385719985273639275461619312387886049564134271134523206816487182471258234511610579723440365536512115890694057563348685020979604422684324848649216399781085065483877885353545978271673431843333399453870081235534557788002158346017514342486445315971687123576376418650068614733200492173209622519792280099)
elem17 = ClassGroup(84935470871645356643964371043191634098372448751301392302254254754428026078034716657166591450480419893348255381575066849129274052666094149184923808347828913999633013010176202673480010297792555274936611860523234071932488182030080470454136247797758172516286921066436303031518668395431063012692747720997733134809, -71986682129675832113672271053120844801123456373574403178624346917179231110258913659106160385509896233753042208262033141818304262034714698508437914603741972332218965767249162144732598929851965966926005506234506825039816357980723132292746382952669791846777108329304047552231368551663696872070082940205969282403, 105368673039279276906099041876126425219291140672453378206893794528212630870917580944721294882507859278387142016150890966191733319258433897406918907856793604066396631132449861603164631567504840711207234499814157342784258990784075510190793498722560822567488354759465330703278939027990005916818816427928456670062)
elem18 = ClassGroup(13551019814542422817989429165490592106787495951171689697788949734037123762914277664720310991427648363394804031445066628252313704398957594161293783397753993867258092761233683227689007888424445134186738463881865672966291772854135251891116708034475681294211408747831263485915267659877818107545799245384622999487, -10150382384967730876058464241128605606586710256081447243912907191318489886558725250508282357065168940093169821387395395706141420255418083486986515869480844830275351423851426149731360711802850905985720180944445735478483984463905121073949894053220217081619262358298089605930958161520331770940662051140567833969, 566730395899835800245387575591959506337738118779908014554377722588147533929765859699730237298384525003964778668460905063085164128865629661892509569604154189586396081320350824239725396592744958816328798128896701716475115777544984276580890520749740590852784664175296362790760069112750729419610537786502173503708)


def test_mul():

    a = ClassGroup(4, 1, 1913504314675470246693353594770050950968304773510316743919811791112650002333244653013640724426881888684495099058940082404854113703012351729504862557886305203939405260696042951007647772781261979355933389685765544066444819057020973330924885286077113355492958799958228533151341074167954853292535979575479907273103132717551686836748471787394372467897589063866260063765537989579769144682733186591068579389691046323623339828585967753563364439485964744606334454099539536081555791987816819330908357329590054553975891502867709475241248925617877060897274388069559782516229851064188563419476497892884550353389340326220747256139)
    b = ClassGroup(16, 41, 478376078668867561673338398692512737742076193377579185979952947778162500583311163253410181106720472171123774764735020601213528425753087932376215639471576300984851315174010737751911943195315494838983347421441386016611204764255243332731221321519278338873239699989557133287835268541988713323133994893869976818275783179387921709187117946848593116974397265966565015941384497394942286170683296647767144847422761580905834957146491938390841109871491186151583613524884884020388947996954204832727089332397513638493972875716927368810312231404469265224318597017389945629057462766047140854869124473221137588347335081555186814061)

    print(a * b)

def test_normalize():
    a = ClassGroup(
        591622449216197258120089391432207181572679374270745984479112414101314701592477848522107674496756100372887295518141911986241641798660763521874054424965681889882724221330887550366991453623858407722364030436647784154711966786382417857735305311987204975806227417098805337249042201223588540680465532198634196097774987618046254796507721237545238070019766545882259089280223674368,
        1876035109500483975519353216485660565059030662716924896410088429565283890582815894123373861317582184925374832910231950495841019095282022050357011392057654267692865921180759019994102795819589538544637244426188502280065345420910149796358880981957270357948408527891335462137136228534113829969158795324927018842939341713211084125981312294562651547786576689605628072971047864713,
        1487227089143280305479117572769463109575596494335839441131411078340457771410217037970036525659967904949382486274280359007946171269114609839747084089656003433231585822182110307677690712327731511663233738510120405523289136140542863597204059620545031674701208079483869128054789412824674160108875508735923455414134698083729234232028811139717522029609862989010845930564341935336
    )
    print(a)
    print(a.reduced())


def test_reduce():
    #a = ClassGroup(16, 105, 478376078668867561673338398692512737742076193377579185979952947778162500583311163253410181106720472171123774764735020601213528425753087932376215639471576300984851315174010737751911943195315494838983347421441386016611204764255243332731221321519278338873239699989557133287835268541988713323133994893869976818275783179387921709187117946848593116974397265966565015941384497394942286170683296647767144847422761580905834957146491938390841109871491186151583613524884884020388947996954204832727089332397513638493972875716927368810312231404469265224318597017389945629057462766047140854869124473221137588347335081555186814207)
    a = ClassGroup(
        591622449216197258120089391432207181572679374270745984479112414101314701592477848522107674496756100372887295518141911986241641798660763521874054424965681889882724221330887550366991453623858407722364030436647784154711966786382417857735305311987204975806227417098805337249042201223588540680465532198634196097774987618046254796507721237545238070019766545882259089280223674368,
        1876035109500483975519353216485660565059030662716924896410088429565283890582815894123373861317582184925374832910231950495841019095282022050357011392057654267692865921180759019994102795819589538544637244426188502280065345420910149796358880981957270357948408527891335462137136228534113829969158795324927018842939341713211084125981312294562651547786576689605628072971047864713,
        1487227089143280305479117572769463109575596494335839441131411078340457771410217037970036525659967904949382486274280359007946171269114609839747084089656003433231585822182110307677690712327731511663233738510120405523289136140542863597204059620545031674701208079483869128054789412824674160108875508735923455414134698083729234232028811139717522029609862989010845930564341935336
    )
    print(a)
    print(a.reduced())

def test_square():
    vest_d = -30616069034807523947093657516320815215492876376165067902716988657802400037331914448218251590830110218951921584943041318477665819248197627672077800926180883263030484171136687216122364364500191669694934234972248705063117104912335573294798164577233813687887340799331656530421457186687277652680575673207678516369650123480826989387975548598309959486361425021860161020248607833276306314923730985457097270235056741177973437257375484057013831031775435913701351265592632577304892671805069109294533717273440872863614264045883351603859982809886032974356390209112956520259677617027017014711623966286152805654229445219531956098223

    g = ClassGroup.identity_for_discriminant(vest_d)
    g_anchor = ClassGroup(2, 1, 3827008629350940493386707189540101901936609547020633487839623582225300004666489306027281448853763777368990198117880164809708227406024703459009725115772610407878810521392085902015295545562523958711866779371531088132889638114041946661849770572154226710985917599916457066302682148335909706585071959150959814546206265435103373673496943574788744935795178127732520127531075979159538289365466373182137158779382092647246679657171935507126728878971929489212668908199079072163111583975633638661816714659180109107951783005735418950482497851235754121794548776139119565032459702128377126838952995785769100706778680652441494512278)

    for i in range(0, 4):
        g = g * g_anchor

    print(g)

def test_impl():
    vest_d = -30616069034807523947093657516320815215492876376165067902716988657802400037331914448218251590830110218951921584943041318477665819248197627672077800926180883263030484171136687216122364364500191669694934234972248705063117104912335573294798164577233813687887340799331656530421457186687277652680575673207678516369650123480826989387975548598309959486361425021860161020248607833276306314923730985457097270235056741177973437257375484057013831031775435913701351265592632577304892671805069109294533717273440872863614264045883351603859982809886032974356390209112956520259677617027017014711623966286152805654229445219531956098223

    g_anchor = ClassGroup(2, 1, 3827008629350940493386707189540101901936609547020633487839623582225300004666489306027281448853763777368990198117880164809708227406024703459009725115772610407878810521392085902015295545562523958711866779371531088132889638114041946661849770572154226710985917599916457066302682148335909706585071959150959814546206265435103373673496943574788744935795178127732520127531075979159538289365466373182137158779382092647246679657171935507126728878971929489212668908199079072163111583975633638661816714659180109107951783005735418950482497851235754121794548776139119565032459702128377126838952995785769100706778680652441494512278)
    g = ClassGroup.identity_for_discriminant(vest_d)

    gs = []
    gs_invs = []

    g_star = ClassGroup.identity_for_discriminant(vest_d)
    for i in range(1, 7):
        g = g_anchor * g
        if i % 2 == 0:
            gs.append(g)
            gs_invs.append(g.inverse())
            g_star = g_star * g

    for (g_elem, g_inv) in zip(gs, gs_invs):
        curr_prod = ClassGroup.identity_for_discriminant(vest_d)
        for elem in gs:
            if elem != g_elem:
                curr_prod = curr_prod * elem
        # print(curr_prod)
        # print(g_inv * g_star)
        assert(curr_prod == g_inv * g_star)
    
    #print(g)
    #print(g_star)

def print_output_format(inputs, output, truth):
    print("[%s] %s %s" % (','.join([str(inp) for inp in inputs]), str(output), "+" if truth else "-"))

def get_rand_group_elems(n):
    g = ClassGroup.generator_for_discriminant(DISCRIMINANT)
    elems = []
    print("Generating %d random group elements." % n)
    for _ in tqdm(range(n)):
        exp = random.randint(0, MAX_EXP)
        new_elem = g ** exp
        elems.append(new_elem)
    return elems

def gen_op_gt(n):
    lhs = get_rand_group_elems(n)
    rhs = get_rand_group_elems(n)
    for lh, rh in zip(lhs, rhs):
        print_output_format([lh, rh], lh * rh, True)

def gen_normalize_gt(n):
    elems = get_rand_group_elems(3 * n)
    to_go = n
    while to_go > 0:
        mult = random.randint(1, int(n / 2))
        base = random.choice(elems)
        for _ in range(mult - 1):
            other = random.choice(elems)
            base = base.multiply(other, reduce=False)

        before = ClassGroup(base[0], base[1], base[2])
        after = base.normalized()

        if not ClassGroup.is_normal(before[0], before[1], before[2]) and ClassGroup.is_normal(after[0], after[1], after[2]):
            print_output_format([before], after, True)
            to_go -= 1

def gen_reduce_gt(n):
    pass

def gen_identity_gt(n):
    pass

def gen_inverse_gt(n):
    pass

def gen_square_gt(n):
    pass

def gen_equality_gt(n):
    pass

def main(args):
    num_examples = args.num_examples
    if args.procedure == "op":
        gen_op_gt(num_examples)
    elif args.procedure == "normalize":
        gen_normalize_gt(num_examples)
    elif args.procedure == "reduce":
        gen_reduce_gt(num_examples)
    elif args.procedure == "identity":
        gen_identity_gt(num_examples)
    elif args.procedure == "inverse":
        gen_inverse_gt(num_examples)
    elif args.procedure == "square":
        gen_square_gt(num_examples)
    elif args.procedure == "equality":
        gen_equality_gt(num_examples)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Classgroup Ground-truth Generator')
    parser.add_argument('--num_examples', default=10, type=int,
                        help='Number of ground-truth examples to generate')

    parser.add_argument(
        '--procedure', 
        choices=[
           'op', 'normalize', 'reduce', 'identity', 'inverse', 'square', 'equality'
        ], 
        required=True
    )

    args = parser.parse_args()

    main(args)